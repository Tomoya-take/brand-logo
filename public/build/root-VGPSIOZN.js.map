{
  "version": 3,
  "sources": ["../../app/root.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app\\\\\\\\root.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app\\\\root.tsx\");\n  import.meta.hot.lastModified = \"1755620880984.9636\";\n}\n// REMIX HMR END\n\n// app/root.tsx\nimport { Links, LiveReload, Meta, Outlet, Scripts, ScrollRestoration, useLoaderData } from \"@remix-run/react\";\nexport const meta = () => {\n  return [{\n    title: \"Brand Logo App\"\n  }];\n};\nexport async function loader({\n  request\n}) {\n  const url = new URL(request.url);\n  return {\n    SHOPIFY_API_KEY: process.env.SHOPIFY_API_KEY || \"\",\n    HOST: url.searchParams.get(\"host\") || \"\"\n  };\n}\nexport default function App() {\n  _s();\n  const data = useLoaderData();\n  return <html lang=\"en\">\r\n      <head>\r\n        <Meta />\r\n        <Links />\r\n      </head>\r\n      <body>\r\n        <Outlet />\r\n        <ScrollRestoration />\r\n        <Scripts />\r\n        <LiveReload />\r\n\r\n        {/* window \u306B API KEY \u3068 host \u3092\u57CB\u3081\u8FBC\u3080 */}\r\n      <script dangerouslySetInnerHTML={{\n        __html: `\n      window.__SHOPIFY_API_KEY__ = \"${data.SHOPIFY_API_KEY}\";\n      window.__SHOPIFY_HOST__ = \"${data.HOST}\";\n    `\n      }} />\r\n\r\n      </body>\r\n    </html>;\n}\n_s(App, \"5thj+e1edPyRpKif1JmVRC6KArE=\", false, function () {\n  return [useLoaderData];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AA0CQ;AAzCR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,sBAAwB,EAAE;AAAA,EACnE;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAe;AACf,cAAY,IAAI,eAAe;AACjC;AAKO,IAAM,OAAO,MAAM;AACxB,SAAO,CAAC;AAAA,IACN,OAAO;AAAA,EACT,CAAC;AACH;AAUe,SAAR,MAAuB;AAC5B,KAAG;AACH,QAAM,OAAO,cAAc;AAC3B,SAAO,mDAAC,UAAK,MAAK,MACd;AAAA,uDAAC,UACC;AAAA,yDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,aAAM;AAAA,MACN,mDAAC,WAAD;AAAA;AAAA;AAAA;AAAA,aAAO;AAAA,SAFT;AAAA;AAAA;AAAA;AAAA,WAGA;AAAA,IACA,mDAAC,UACC;AAAA,yDAAC,YAAD;AAAA;AAAA;AAAA;AAAA,aAAQ;AAAA,MACR,mDAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,aAAmB;AAAA,MACnB,mDAAC,aAAD;AAAA;AAAA;AAAA;AAAA,aAAS;AAAA,MACT,mDAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,aAAY;AAAA,MAGd,mDAAC,YAAO,yBAAyB;AAAA,QAC/B,QAAQ;AAAA,sCACsB,KAAK;AAAA,mCACR,KAAK;AAAA;AAAA,MAElC,KALA;AAAA;AAAA;AAAA;AAAA,aAKG;AAAA,SAZH;AAAA;AAAA;AAAA;AAAA,WAcA;AAAA,OAnBG;AAAA;AAAA;AAAA;AAAA,SAoBL;AACJ;AACA,GAAG,KAAK,gCAAgC,OAAO,WAAY;AACzD,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,KAAK;AAEtB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
